name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      # Step 4: Run SonarCloud Scan
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: .
        continue-on-error: true

      # Step 5: Run Pytest & collect coverage
      - name: Run Pytest
        run: |
          pytest --cov=app --cov-report=xml > test_output.log
          coverage=$(awk '/TOTAL/ {print $4}' test_output.log | cut -d'%' -f1)
          echo "COVERAGE=$coverage" >> $GITHUB_ENV

      # Step 6: Email if coverage <85%
      - name: Send Email if Coverage <85%
        if: env.COVERAGE < 85
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.mail.yahoo.com
          server_port: 465
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: "Coverage Alert: Project cicd-demo-py-repo1"
          to: vvsrinivasbabu@yahoo.com
          from: "CI Pipeline <noreply@github.com>"
          body: |
            Hello,
            The coverage for cicd-demo-py-repo1 is below 85%: ${{ env.COVERAGE }}%.
            Please review your tests.
        continue-on-error: true

      # Step 7: Build Docker image
      - name: Build Docker image
        run: docker build -t dkrsrinivas/cicd-demo-py-repo1:${{ github.sha }} .

      # Step 8: Login to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: dkrsrinivas
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Step 9: Push Docker image
      - name: Push Docker image
        run: docker push dkrsrinivas/cicd-demo-py-repo1:${{ github.sha }}

# Note:
# - SONAR_TOKEN, SMTP_USERNAME, SMTP_PASSWORD, DOCKERHUB_TOKEN are GitHub secrets.
# - This workflow checks coverage, sends email on failure, and builds/pushes Docker images.
# - All steps are commented for clarity.
